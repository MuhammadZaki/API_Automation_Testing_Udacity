{
	"info": {
		"_postman_id": "749a09ff-d0ba-4793-a823-34073b682a80",
		"name": "Trello API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21174541"
	},
	"item": [
		{
			"name": "Boards",
			"item": [
				{
					"name": "Create New board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Permission Level\"), () => {\r",
									"    pm.expect(response.permissionLevel).to.eql(\"private\");\r",
									"};\r",
									"pm.test(\"Can Be Public\"), () => {\r",
									"    pm.expect(response.canBePublic).to.eql(true);\r",
									"};\r",
									"pm.test(\"Can Invite\"), () => {\r",
									"    pm.expect(response.canInvite).to.eql(true);\r",
									"};"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/boards/?name=ReSubmissionUdacity&key={{key}}&token={{token}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "ReSubmissionUdacity"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Boards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"console.log(response.boards);\r",
									"\r",
									"pm.test(\"No of boards is above 1\"), () => {\r",
									"    pm.expect(response.boards).to.above[1];\r",
									"};\r",
									"pm.environment.set(\"FirstBoardID\", \"response.boards[0].id\");\r",
									"pm.environment.set(\"LastBoardID\", \"response.boards[4].id\");\r",
									"\r",
									"console.log(\"First Board ID\", response.boards[0].id);\r",
									"console.log(\"Last Board ID\", response.boards[4].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/members/me?boards=open&key={{key}}&token={{token}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"members",
								"me"
							],
							"query": [
								{
									"key": "boards",
									"value": "open"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"board is removed successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/boards/629fd561b5c7b82ec4c54bed?key={{key}}&token={{token}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"boards",
								"629fd561b5c7b82ec4c54bed"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lists",
			"item": [
				{
					"name": "Create List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body contains id, name, idBoard\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\", \"name\", \"idBoard\");\r",
									"});\r",
									"pm.test(\"Check closed property\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.closed).to.eql(false);\r",
									"});\r",
									"pm.test(\"Check limits property\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.limits).to.eql({});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/lists?name=Zaki&idBoard=629fffbd5f6bc26c1eaa78f0&key={{key}}&token={{token}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "name",
									"value": "Zaki"
								},
								{
									"key": "idBoard",
									"value": "629fffbd5f6bc26c1eaa78f0"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lists in a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"console.log(response);\r",
									"pm.test(\"No of lists is 3\"), () => {\r",
									"    pm.expect(response).to.eql[3];\r",
									"};\r",
									"\r",
									"pm.environment.set(\"FirstListID\", \"response[0].id\");\r",
									"pm.environment.set(\"LastListID\", \"response[2].id\");\r",
									"\r",
									"console.log(\"First List ID\", response[0].id);\r",
									"console.log(\"Last List ID\", response[2].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/boards/629fe056639c007c5ce08248/lists?key={{key}}&token={{token}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"boards",
								"629fe056639c007c5ce08248",
								"lists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Arhive or Unarchive a list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check closed property\", function () {\r",
									"    pm.expect(response.closed).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Set-Cookie is present\", function () {\r",
									"    pm.response.to.have.header(\"Set-Cookie\");\r",
									"});\r",
									"\r",
									"/* var koko = postman.getResponseHeader(\"Set-Cookie\");\r",
									"console.log(koko); */\r",
									"\r",
									"pm.test(\"check Set-Cookies header data\", () => {\r",
									"    pm.expect(postman.getResponseHeader(\"Set-Cookie\")).to.include(\"isEnterpriseAdmin%3Dfalse\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/lists/62a003920897c869a6d8e6b7/closed?key={{key}}&token={{token}}&value=true",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"lists",
								"62a003920897c869a6d8e6b7",
								"closed"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "value",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}