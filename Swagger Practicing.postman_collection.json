{
	"info": {
		"_postman_id": "35c2cd91-3139-40c4-83f3-bb13e788af96",
		"name": "Swagger Practicing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21174541"
	},
	"item": [
		{
			"name": "Author",
			"item": [
				{
					"name": "List Authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains idBook\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"idBook\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains firstName\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"firstName\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains lastName\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"lastName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Valid Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"firstName & lastName are mandatory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Muhammad\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Zaki\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 2,\r\n  \"idBook\": 4,\r\n  \"firstName\": \"Muhammad\",\r\n  \"lastName\": \"Zaki\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Invalid Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" firstname is mandatory\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\" lastname is mandatory\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 2,\r\n  \"idBook\": 4,\r\n  //\"firstName\": ,\r\n  \"lastName\": \"Zaki\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Author data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"Muhammad\",\n  \"lastName\": \"Zaki\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}//api/v1/Authors/5",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"",
								"api",
								"v1",
								"Authors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a scpecific Author with id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Author data is changed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Muhammad\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Zaki\");\r",
									"    console.log(jsonData.firstName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/5",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Authot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/5",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Book",
			"item": [
				{
					"name": "Search with a valid idBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/authors/books/5",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"authors",
								"books",
								"5"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}